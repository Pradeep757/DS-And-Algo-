Data Structure And Algorithms,

Array --
  Is liner datastructure, the data is stored in continuous manner.
  Uses/Advantages --
    As, data stored in continuous manner searching of element is faster(with help of index)
    More Cache locality -- Once we going for searching an element in array as we know memory is continuous there cache will be happen there fore when
    next time we will go for searching it won't go memory it will search in cache.
  Disadvantages --
    Size of array should be can't expand because it's already declared. it's only good when we know the exact size of Array.
    Insertion and deletion of array element is difficult. Because as we know array element is fixed memory allocated once we add remaining element
      are to be moved. if deltion also all the elements to be moved.
  Example -
    int arr[14];
    arr[0]= 5;
    cout << arr[0] << ""


Lined List --
  Is liner datastructure as array but memory allocation isn't continuous.
  Linked list consists node and each node contains data field and reference fild.
  Uses/Advantages --
   Insertion element are easier because we just need to go for particular element just unlink the pointer and add, similarly for deletion.
   Size of the data not be know based on what we add it will go and increase.
  Disadvantages --
    As, we know isn't stored continuous manner to search an element is very difficult here.
    not cache friendly when we need to perform an operation we need to come and memory each time.

    head
         |
         |
     +------------+----------------------+
     | data field(data) | Pointer or reference |
     +------------+----------------------+
